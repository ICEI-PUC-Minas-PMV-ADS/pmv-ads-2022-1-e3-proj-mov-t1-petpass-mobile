{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Entypo, Feather } from '@expo/vector-icons';\nimport api from \"../../api/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function MeusPets() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pets = _useState2[0],\n      setPets = _useState2[1];\n\n  useEffect(function () {\n    api.get('/pets').then(function (res) {\n      return setPets(res.data);\n    });\n  }, []);\n  console.log('teste', pets);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      children: pets === [] ? _jsx(Text, {\n        children: \"Voc\\xEA n\\xE3o tem nenhum pet\"\n      }) : _jsx(_Fragment, {\n        children: pets == null ? void 0 : pets.map(function (item) {\n          return _jsxs(View, {\n            style: styles.box,\n            children: [_jsx(Image, {\n              style: styles.img,\n              source: require(\"../../../img/dog.jpg\")\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.nome,\n                children: item.name\n              }), _jsxs(Text, {\n                style: styles.raça,\n                children: [\"Ra\\xE7a: \", item.raca]\n              })]\n            }), _jsx(View, {\n              style: styles.icon,\n              children: _jsx(Feather, {\n                name: \"eye\",\n                size: 25\n              })\n            })]\n          });\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleAddPet();\n      },\n      children: _jsx(View, {\n        style: styles.addPet,\n        children: _jsx(Text, {\n          style: styles.addText,\n          children: \" + \"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#DCDCDC'\n  },\n  box: {\n    margin: 10,\n    borderRadius: 20,\n    backgroundColor: '#fff',\n    flexDirection: 'row'\n  },\n  img: {\n    width: 80,\n    height: 80,\n    borderRadius: 50,\n    margin: 10\n  },\n  nome: {\n    paddingTop: 20,\n    paddingLeft: 15,\n    fontWeight: 'bold',\n    fontSize: 17,\n    color: '#363F5F',\n    flexDirection: 'column'\n  },\n  raça: {\n    padding: 15,\n    fontWeight: 'bold',\n    color: '#969CB3'\n  },\n  icon: {\n    paddingLeft: 70,\n    paddingTop: 35\n  },\n  addPet: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#c0c0c0',\n    borderWidth: 1,\n    bottom: 10,\n    marginHorizontal: 340\n  },\n  addText: {\n    fontWeight: 'bold',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["/home/arthur/dev/PetPass/src/pages/MeusPets/index.js"],"names":["React","useEffect","useState","Entypo","Feather","api","MeusPets","pets","setPets","get","then","res","data","console","log","styles","container","map","item","box","img","require","nome","name","raça","raca","icon","handleAddPet","addPet","addText","StyleSheet","create","flex","backgroundColor","margin","borderRadius","flexDirection","width","height","paddingTop","paddingLeft","fontWeight","fontSize","color","padding","justifyContent","alignItems","borderColor","borderWidth","bottom","marginHorizontal"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { StyleSheet, Text, View,Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { Entypo, Feather } from '@expo/vector-icons'\r\nimport api from \"../../api/api\";\r\n\r\n\r\nexport default function MeusPets() {\r\n\r\n  const [pets, setPets] = useState()\r\n\r\n  useEffect(() => {\r\n   api.get('/pets').then((res) => setPets(res.data))\r\n  }, [])\r\nconsole.log('teste', pets)\r\n  return (\r\n    <View style={styles.container}>\r\n<ScrollView>\r\n  {pets === [] ? (\r\n      <Text>Você não tem nenhum pet</Text>\r\n  ) : (\r\n      <>\r\n      {pets?.map((item) => (\r\n          <View style={styles.box}>\r\n            <Image style={styles.img} source={require('../../../img/dog.jpg')}/>\r\n\r\n            <View>\r\n              <Text style={styles.nome}>{item.name}</Text>\r\n              <Text style={styles.raça}>Raça: {item.raca}</Text>\r\n            </View>\r\n\r\n\r\n            <View style={styles.icon}>\r\n              <Feather name=\"eye\" size={25}/>\r\n\r\n            </View>\r\n          </View>\r\n      ))}\r\n      </>\r\n  )}\r\n\r\n\r\n     </ScrollView>\r\n\r\n     <TouchableOpacity onPress={() => handleAddPet()}>\r\n                <View style={styles.addPet}>\r\n                  <Text style={styles.addText}> + </Text>\r\n                </View>\r\n      </TouchableOpacity>\r\n  </View>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#DCDCDC',\r\n  },\r\n  box:{\r\n    margin:10,\r\n    borderRadius:20,\r\n    backgroundColor: '#fff',\r\n    flexDirection: 'row',\r\n  },\r\n  img:{\r\n    width:80,\r\n    height:80,\r\n    borderRadius:50,\r\n    margin:10,  \r\n  },\r\n    nome:{\r\n      paddingTop:20,\r\n      paddingLeft:15,\r\n      fontWeight:'bold',\r\n      fontSize:17,\r\n      color:'#363F5F',\r\n      flexDirection: 'column',\r\n    }, \r\n    raça:{\r\n      padding:15,\r\n      fontWeight:'bold',\r\n      color:'#969CB3',\r\n    },\r\n    icon:{\r\n      paddingLeft:70,\r\n      paddingTop:35,\r\n    },\r\n    addPet:{\r\n      width:60,\r\n      height:60,\r\n      backgroundColor:'#fff',\r\n      borderRadius:60,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderColor: '#c0c0c0',\r\n      borderWidth:1,\r\n      bottom:10,\r\n      marginHorizontal:340,\r\n    },\r\n    addText:{\r\n      fontWeight:'bold',\r\n      fontSize:25\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}